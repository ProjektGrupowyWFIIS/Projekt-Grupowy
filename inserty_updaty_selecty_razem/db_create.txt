DROP SCHEMA IF EXISTS units CASCADE;
CREATE SCHEMA units;

CREATE DOMAIN units.unit_domain     as VARCHAR(10);
CREATE DOMAIN units.ratio_nz_domain as DOUBLE PRECISION CONSTRAINT ratio_gt_0 CHECK(value > 0);
CREATE DOMAIN units.ratio_domain    as DOUBLE PRECISION CONSTRAINT ratio_ge_0 CHECK(value >= 0);
CREATE DOMAIN units.uncertainty     as DOUBLE PRECISION CONSTRAINT unc_interval CHECK(value >= 0 and value <= 100);

CREATE TABLE units.quantities 
(
  quantity_id       SERIAL            PRIMARY KEY,
  quantity_name_pl  VARCHAR(30)       NOT NULL UNIQUE,
  quantity_name_eng VARCHAR(30)       NOT NULL UNIQUE,
  base_unit_id      INTEGER               NULL
);

CREATE TABLE units.units 
(
  unit_id            SERIAL                PRIMARY KEY,
  unit               units.unit_domain     NOT NULL UNIQUE,
  unit_full_name_pl  VARCHAR(80)           NOT NULL,
  unit_full_name_eng VARCHAR(80)           NOT NULL,
  ratio              units.ratio_nz_domain NOT NULL,
  quantity_id        INTEGER               NOT NULL CONSTRAINT fk_quantity
                                                    REFERENCES units.quantities(quantity_id)
                                                    ON DELETE CASCADE ON UPDATE CASCADE 
                                                    DEFERRABLE INITIALLY DEFERRED
);

ALTER TABLE units.quantities ADD CONSTRAINT fk_base_unit 
                             FOREIGN KEY(base_unit_id) REFERENCES units.units(unit_id)
                             ON DELETE CASCADE ON UPDATE CASCADE 
                             DEFERRABLE INITIALLY DEFERRED;

CREATE TABLE units.source_unit_names 
(
   unit_variant      units.unit_domain PRIMARY KEY,
   unit_canonical_id INTEGER           NOT NULL CONSTRAINT fk_canonical_unit 
                                                REFERENCES units.units(unit_id)
                                                ON DELETE CASCADE ON UPDATE CASCADE
);

/***********************************************************/

DROP SCHEMA IF EXISTS files CASCADE;
CREATE SCHEMA files;

CREATE TYPE files.file_types AS ENUM ('pdf', 'xls', 'csv', 'doc', 'txt', 'png', 'jpg');

CREATE TABLE files.folders 
(
  folder_id              SERIAL       PRIMARY KEY,
  folder_name            VARCHAR(256) NOT NULL UNIQUE,
  folder_description_pl  TEXT         NOT NULL DEFAULT '',
  folder_description_eng TEXT         NOT NULL DEFAULT '',
  parent_folder_id       INTEGER      NULL  CONSTRAINT fk_fold_fold 
                                            REFERENCES files.folders(folder_id)
                                            ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE files.files 
(
  file_id       SERIAL           PRIMARY KEY,
  file_name     VARCHAR(256)     NOT NULL,
  file_type     files.file_types NOT NULL,
  hdd_file_path VARCHAR(1024)    NOT NULL,
  folder_id     INTEGER          NOT NULL  CONSTRAINT fk_file_fold 
                                           REFERENCES files.folders(folder_id)
                                           ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT unique_file_name UNIQUE(file_name, folder_id)
);

/***********************************************************/

DROP SCHEMA IF EXISTS categories CASCADE;
CREATE SCHEMA categories;

CREATE TABLE categories.categories 
(
  cat_id                  SERIAL       PRIMARY KEY,
  cat_name_pl             VARCHAR(80)  NOT NULL UNIQUE,
  cat_name_eng            VARCHAR(80)  NOT NULL UNIQUE,
  cat_description_pl      TEXT         NOT NULL DEFAULT '',
  cat_description_eng     TEXT         NOT NULL DEFAULT ''
);

CREATE TABLE categories.hierarchy_of_categories 
(
  cat_id         INTEGER        NOT NULL CONSTRAINT fk_hier_to_cat 
                                         REFERENCES categories.categories(cat_id)
                                         ON DELETE CASCADE ON UPDATE CASCADE,
  parent_id      INTEGER        NOT NULL CONSTRAINT fk_hier_to_hier 
                                         REFERENCES categories.categories(cat_id)
                                         ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT pk_category_hierarchy PRIMARY KEY(cat_id, parent_id)
);

/***********************************************************/

DROP SCHEMA IF EXISTS attributes CASCADE;
CREATE SCHEMA attributes;

CREATE DOMAIN attributes.attribute_value as VARCHAR(200);
CREATE DOMAIN attributes.attribute_name  as VARCHAR(30);
CREATE TYPE   attributes.attribute_type  AS ENUM ('free', 'enum');

CREATE TABLE attributes.attributes 
(
  attribute_id               SERIAL                     PRIMARY KEY,
  type_id                    attributes.attribute_type  NOT NULL,
  attribute_name_pl          attributes.attribute_name  NOT NULL UNIQUE,
  attribute_name_eng         attributes.attribute_name  NOT NULL UNIQUE,
  attribute_description_pl   TEXT                       NOT NULL DEFAULT '',
  attribute_description_eng  TEXT                       NOT NULL DEFAULT ''
);

CREATE TABLE attributes.attribute_enums 
(
  attribute_id                      INTEGER                         NOT NULL CONSTRAINT fk_enums_attr 
                                                                             REFERENCES attributes.attributes(attribute_id) 
                                                                             ON DELETE CASCADE ON UPDATE CASCADE,
  attribute_value_pl                attributes.attribute_value      NOT NULL,
  attribute_value_eng               attributes.attribute_value      NOT NULL,
  attribute_value_description_pl    TEXT                            NOT NULL DEFAULT '',
  attribute_value_description_eng   TEXT                            NOT NULL DEFAULT '',

  CONSTRAINT pk_attr_enums PRIMARY KEY(attribute_id, attribute_value_pl),
  CONSTRAINT unique_attr_enums UNIQUE(attribute_id, attribute_value_eng)
);

CREATE TABLE attributes.mandatory_attributes 
(
  cat_id           INTEGER     NOT NULL CONSTRAINT fk_mandatory_cats 
                                        REFERENCES categories.categories(cat_id)
                                        ON DELETE CASCADE ON UPDATE CASCADE,
  attribute_id     INTEGER     NOT NULL CONSTRAINT fk_mandatory_attrs 
                                        REFERENCES attributes.attributes(attribute_id)
                                        ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_mandatory PRIMARY KEY(cat_id, attribute_id)
);

/***************************************************************/

DROP SCHEMA IF EXISTS factors CASCADE;
CREATE SCHEMA factors;

CREATE TABLE factors.factor_names 
(
  factor_id               VARCHAR(10)   PRIMARY KEY,
  factor_name_pl          VARCHAR(30)   NOT NULL UNIQUE,
  factor_name_eng         VARCHAR(30)   NOT NULL UNIQUE,
  factor_description_pl   TEXT          NOT NULL DEFAULT '',
  factor_description_eng  TEXT          NOT NULL DEFAULT ''
);

CREATE TABLE factors.sources 
(
  source_id             SERIAL       PRIMARY KEY,
  source_date           date         NOT NULL,
  source_description    TEXT         NULL,
  doi                   VARCHAR(100) NULL UNIQUE,
  bibtex                TEXT         NULL,
  file_id               INTEGER      NULL CONSTRAINT fk_sources_files 
                                          REFERENCES files.files(file_id)
		                          ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE factors.mandatory_factors 
(
  cat_id           INTEGER      NOT NULL CONSTRAINT fk_mandatory_facts_cats 
                                         REFERENCES categories.categories(cat_id)
                                         ON DELETE CASCADE ON UPDATE CASCADE,
  factor_id        VARCHAR(10)  NOT NULL CONSTRAINT fk_mandatory_facts 
                                         REFERENCES factors.factor_names(factor_id)
                                         ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_mandatory PRIMARY KEY(cat_id, factor_id)
);

/**************************************************************/

DROP SCHEMA IF EXISTS resources CASCADE;
CREATE SCHEMA resources;

CREATE DOMAIN resources.resource_name as VARCHAR(200);

CREATE TABLE resources.resources 
(
  resource_id               SERIAL                   PRIMARY KEY,
  resource_name_pl          resources.resource_name  NOT NULL UNIQUE,
  resource_name_eng         resources.resource_name  NOT NULL UNIQUE,
  resource_description_pl   TEXT                     DEFAULT '' NOT NULL,
  resource_description_eng  TEXT                     DEFAULT '' NOT NULL
);

CREATE TABLE resources.resources_attributes 
(
  resource_id      INTEGER                     NOT NULL CONSTRAINT fk_resattr_tores 
                                                        REFERENCES resources.resources(resource_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  attribute_id     INTEGER                     NOT NULL CONSTRAINT fk_resattr_toattr 
                                                        REFERENCES attributes.attributes(attribute_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  attribute_value  attributes.attribute_value  NOT NULL,

  CONSTRAINT pk_resattrs PRIMARY KEY(resource_id,attribute_id)
);

CREATE TABLE resources.factors 
(
  resource_id             INTEGER                       CONSTRAINT fk_factor_tores 
                                                        REFERENCES resources.resources(resource_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  factor_id               VARCHAR(10)         NOT NULL  CONSTRAINT fk_factor_tofactor_names 
                                                        REFERENCES factors.factor_names(factor_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  source_id               INTEGER             NOT NULL  CONSTRAINT fk_factor_tosource 
                                                        REFERENCES factors.sources(source_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  resource_unit_1_id      INTEGER             NOT NULL  CONSTRAINT fk_factor_resource_unit_1 
                                                        REFERENCES units.units(unit_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  resource_unit_2_id      INTEGER             NULL      CONSTRAINT fk_factor_resource_unit_2 
                                                        REFERENCES units.units(unit_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  factor_unit_id          INTEGER             NOT NULL  CONSTRAINT fk_factor_factor_unit
                                                        REFERENCES units.units(unit_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  factor                  units.ratio_domain  NOT NULL,
  uncertainty             units.uncertainty   NULL,

  CONSTRAINT pk_factors PRIMARY KEY(resource_id, factor_id, resource_unit_1_id)
);


CREATE TABLE resources.resources_categories 
(
  resource_id INTEGER NOT NULL CONSTRAINT fk_rescat_tores
                               REFERENCES resources.resources(resource_id)
                               ON DELETE CASCADE ON UPDATE CASCADE,
  cat_id      INTEGER NOT NULL CONSTRAINT fk_rescat_tocat
                               REFERENCES categories.categories(cat_id)
                               ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT pk_rescat PRIMARY KEY(resource_id, cat_id)
);

/*************************************************************/

DROP SCHEMA IF EXISTS energy_resources CASCADE;
CREATE SCHEMA energy_resources;

CREATE DOMAIN energy_resources.resource_name as VARCHAR(200);

CREATE TABLE energy_resources.energy_resources 
(
  resource_id               SERIAL                  PRIMARY KEY,
  resource_name_pl          resources.resource_name NOT NULL UNIQUE,
  resource_name_eng         resources.resource_name NOT NULL UNIQUE,
  gus_id                    CHAR(3)                 NOT NULL,
  resource_description_pl   TEXT                    DEFAULT '' NOT NULL,
  resource_description_eng  TEXT                    DEFAULT '' NOT NULL 
);

CREATE TABLE energy_resources.resources_attributes 
(
  resource_id        INTEGER                    NOT NULL CONSTRAINT fk_resattr_tores 
                                                         REFERENCES energy_resources.energy_resources(resource_id)
                                                         ON DELETE CASCADE ON UPDATE CASCADE,
  attribute_id       INTEGER                    NOT NULL CONSTRAINT fk_resattr_toattr 
                                                         REFERENCES attributes.attributes(attribute_id)
                                                         ON DELETE CASCADE ON UPDATE CASCADE,
  attribute_value    attributes.attribute_value NOT NULL,

  CONSTRAINT pk_resattrs PRIMARY KEY(resource_id,attribute_id)
);

CREATE TABLE energy_resources.factors 
(
  resource_id            INTEGER                        CONSTRAINT fk_factor_tores 
                                                        REFERENCES energy_resources.energy_resources(resource_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  factor_id              VARCHAR(10)        NOT NULL    CONSTRAINT fk_factor_tofactor_names 
                                                        REFERENCES factors.factor_names(factor_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  source_id              INTEGER            NOT NULL    CONSTRAINT fk_factor_tosource 
                                                        REFERENCES factors.sources(source_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  resource_unit_id       INTEGER            NOT NULL    CONSTRAINT fk_factor_resource_unit
                                                        REFERENCES units.units(unit_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  factor_unit_id         INTEGER            NOT NULL    CONSTRAINT fk_factor_factor_unit
                                                        REFERENCES units.units(unit_id)
                                                        ON DELETE CASCADE ON UPDATE CASCADE,
  factor                 units.ratio_domain NOT NULL,
  uncertainty            units.uncertainty  NULL,
  
  CONSTRAINT pk_factors PRIMARY KEY(resource_id, factor_id, resource_unit_id)
);

CREATE TABLE energy_resources.resources_categories 
(
  resource_id      INTEGER NOT NULL CONSTRAINT fk_rescat_tores
                                    REFERENCES energy_resources.energy_resources(resource_id)
                                    ON DELETE CASCADE ON UPDATE CASCADE,
  cat_id           INTEGER NOT NULL CONSTRAINT fk_rescat_tocat
                                    REFERENCES categories.categories(cat_id)
                                    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT pk_rescat PRIMARY KEY(resource_id, cat_id)
);

/*******************************************************/
